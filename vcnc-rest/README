DEVELOPER INSTALLATION

Docmentation is generated by Sphinx. 

% sudo pip install --upgrade pip
% sudo pip install sphinx

Install node.js. Begin by ensuring that (virtually) any version of node is
running on your workstation. The existing version will be used to install
Node 6.6.0, the version required for both vcnc-rest and vcnc-web.

  % which node

If node isn't found, install node from your Linux distribution's package manager. On
SuSE, install the 'nodejs' package.  On CentOS:
  # yum install epel-release
  # yum install nodejs
Best to use a terminal emulator; an Emacs bash
buffer doesn't interpret the color highlighting sequences.

Next, install Node Version Manager (nvm).  nvm will download and enable any desired
version of node.  

  % curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.0/install.sh | bash

Use nvm to download the required version of node (currently v6.6.0). It will also
configure your PATH variable to find this version of node.

  % nvm install v6.6.0

When the CNC server is built, the scripts assume that the developer's shell
has 'nvm' on the path.  One way to do that is to put something like the
following in your .bashrc:

  export NVM_DIR="/users/nick/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
  [[ -r $NVM_DIR/bash_completion ]] && . $NVM_DIR/bash_completion

'node-gyp' is required to be available as a shell command. This installation
must be run as root.  node-gyp is needed to build node.js C++
extension objects.

  # npm install -g node-gyp

The CNC server is an autotools project wrapped around a node.js
project. Configure, build and install is done in the familiar way, except that 
'configure' must be run twice.  The build directory must be called 'Build'
because node_gyp is hardwired to expect stuff there.

  % autoreconf
  % mkdir Build
  % cd Build
  % ../configure --with-pic --with-toolroot=/opt/frqu/TOOLROOT
  % make 

... If the make stops because of a missing config file, run configure/make
again ...

  % ../configure --with-pic --with-toolroot=/opt/frqu/TOOLROOT
  % make 

  % make install
  
The installation process retrieves many of its dependencies from the
Internet, notably everything in node_modules and the Swagger interactive
documentation code.

To use the Swagger API specification editor, invoke:

  % cd Build
  % make swagger-editior
  % cd ../swagger-editor
  % npm start

The cnc_server connects to Redis on startup. See
./installer/vcnc-redis.service.

To run the cnc_server from a development directory:

% cd @p4-workspace-dir@/vcnc-rest
% npm start

